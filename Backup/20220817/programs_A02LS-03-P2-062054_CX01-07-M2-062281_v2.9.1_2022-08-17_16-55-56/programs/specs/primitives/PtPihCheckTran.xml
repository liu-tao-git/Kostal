<?xml version="1.0"?>
<!-- ==========================================================================
 primitive type options :
 "INIT", "MOVE", "READY", "CONTACT", "SLIDE", "SLIDE_ADAPTIVE", "SLIDE_SPIRAL",
 "SLIDE_SINEWAVE", "MAGNET", "PEGINHOLE"

robot type options : Flexiv, UR5, Bullet, Klampt
 ===========================================================================-->
<fvr>
    <primitive>
        <pt_desc>This PT helps check if a peg is already in a hole. The user will provide a contact axis, and a search axis perpendicular to the contact axis; a companion axis will be generated to form a frame. The robot will move toward the +searchAxis, -searchAxis, -companionAxis, +companionAxis. While moving along these axes if the robot goes out of the limit specified by searchRange, the PT will terminate and state pegIsInHole will be set to false, if the robot encounters force greater than searchForce along all these directions during the process, the PT will terminate and the pegIsInHolde is set to true.</pt_desc>
        <!-- ==================================================================
         ui parameter configuration (optional)
         check more detailed setting in CommonParams.xml
         ====================================================================-->
        <ui_par_config>
            <icon>:blockpalette/images/block/icon_pihCheckTran.svg</icon>
        </ui_par_config>
        <!-- ===================================================================
         input parameter configuration

         par_type : "VEC_3d", "QUAT", "POSE", "BOOL", "DOUBLE", "INT", "STRING"
         par_input_type : "KEYIN", "TEACH" , "PT"
         ====================================================================-->
        <input_par_config>
            <par_name> contactAxis </par_name>
            <par_desc> "contact axis in tcp frame, it has to be along one of tcp's principal axes" </par_desc>
            <par_type> VEC_3d </par_type>
            <par_unit> none </par_unit>
            <par_required> 0 </par_required>
            <par_default> 0.0 0.0 1.0 </par_default>
        </input_par_config>
        <input_par_config>
            <par_name> searchAxis </par_name>
            <par_desc> "search axis in tcp frame, it has to be perpendicular to the insertion axis" </par_desc>
            <par_type> VEC_3d </par_type>
            <par_unit> none </par_unit>
            <par_required> 0 </par_required>
            <par_default> 1.0 0.0 0.0</par_default>
        </input_par_config>
        <input_par_config>
            <par_name> searchRange </par_name>
            <par_desc> "a range within which the robot will make forward, backward, left, and right search motions" </par_desc>
            <par_type> DOUBLE </par_type>
            <par_unit> m </par_unit>
            <par_required> 0 </par_required>
            <par_default> 0.01 </par_default>
            <par_min> 0.001 </par_min>
            <par_max> 0.1 </par_max>
        </input_par_config>
        <input_par_config>
            <par_name> searchForce </par_name>
            <par_desc> "a force threshold for detecting if the robot can move along a search direction" </par_desc>
            <par_type> DOUBLE </par_type>
            <par_required> 0 </par_required>
            <par_unit> N </par_unit>
            <par_min> 2 </par_min>
            <par_max> 20 </par_max>
            <par_default> 3 </par_default>
        </input_par_config>
        <input_par_config>
            <par_name> searchVelocity </par_name>
            <par_desc> "the maximum TCP velocity for the search motions" </par_desc>
            <par_type> DOUBLE </par_type>
            <par_unit> m/s </par_unit>
            <par_min> 0.001 </par_min>
            <par_max> 0.1 </par_max>
            <par_required> 0 </par_required>
            <par_default> 0.01 </par_default>
        </input_par_config>
        <!-- ===================================================================
         state parameter configuration
         ====================================================================-->
        <state_par_config>
            <par_name> pegIsInHole </par_name>
            <par_desc> "whether or not the peg is already in the hole (it will be initially set to false, and updated when the PT is terminated to reflect the actual check result)" </par_desc>
            <par_type> BOOL </par_type>
            <par_unit> none </par_unit>
        </state_par_config>
        <!-- ===================================================================
                output parameter configuration
        ====================================================================-->
        <output_par_config>
            <par_name> initTcpPose </par_name>
            <par_desc> "initial TCP pose when robot enters this primitive" </par_desc>
            <par_type> COORD </par_type>
            <par_unit> m-deg </par_unit>
        </output_par_config>
        <!-- ==================================================================
         default transition condition  
          condition_type : trigger condition type    
          lhs_param_name : LHS parameter name. It must be one of the state parameters in primitive  
          lhs_param_category : LHS parameter category. This should be PT_STATE for now 
          rhs_param_name (optional): RHS parameter name. no need to fill this field if rhs is a constant.
          rhs_param_category : RHS parameter category 
          rhs_param_data (optional) : RHS parameter data. 
         ====================================================================-->
        <default_transition_condition>
            <condition_type> EQUAL </condition_type>
            <lhs_param_name> terminated </lhs_param_name>
            <lhs_param_category> PT_STATE </lhs_param_category>
            <rhs_param_category> CONST </rhs_param_category>
            <rhs_param_data> 1 </rhs_param_data>
        </default_transition_condition>
    </primitive>
</fvr>
